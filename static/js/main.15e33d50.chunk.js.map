{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","handlePrevClick","setState","Math","min","props","step","handleNextClick","images","frameSize","length","max","this","itemWidth","animationDuration","className","style","width","transform","transition","map","image","src","alt","indexOf","type","disabled","onClick","Component","App","htmlFor","id","value","onChange","event","Number","target","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15e33d50.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n}\n\ninterface State {\n  position: number;\n}\n\nexport class Carousel extends Component<Props, State> {\n  state = {\n    position: 0,\n  };\n\n  handlePrevClick = () => {\n    this.setState(({ position }) => (\n      (position === 0)\n        ? { position }\n        : { position: Math.min(position + this.props.step, 0) }\n    ));\n  };\n\n  handleNextClick = () => {\n    const {\n      images,\n      frameSize,\n      step,\n    } = this.props;\n\n    this.setState(({ position }) => (\n      (position === -(images.length - frameSize))\n        ? { position }\n        : { position: Math.max(-(images.length - frameSize), position - step) }\n    ));\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      animationDuration,\n    } = this.props;\n\n    const { position } = this.state;\n\n    return (\n      <div\n        className=\"Carousel box\"\n        style={{\n          width: `${itemWidth * frameSize}px`,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            width: `${itemWidth * images.length}px`,\n            transform: `translateX(${position * itemWidth}px)`,\n            transition: `transform ${animationDuration}ms`,\n          }}\n        >\n          {images.map((image: string) => (\n            <li\n              className=\"Carousel__item\"\n              key={image}\n            >\n              <img\n                src={image}\n                alt={`smile-${images.indexOf(image) + 1}`}\n                width={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            type=\"button\"\n            disabled={position === 0}\n            className=\"button is-link is-outlined\"\n            onClick={this.handlePrevClick}\n          >\n            {'<< Prev'}\n          </button>\n          <button\n            data-cy=\"next\"\n            type=\"button\"\n            disabled={position === -(images.length - frameSize)}\n            className=\"button is-link is-outlined\"\n            onClick={this.handleNextClick}\n          >\n            {'Next >>'}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\nexport const images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\ninterface State {\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n  };\n\n  render() {\n    const {\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1\n          className=\"subtitle is-2\"\n          data-cy=\"title\"\n        >\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n        />\n\n        <div className=\"slidecontainer\">\n          <label htmlFor=\"itemId\">\n            {`Set your image width: (${itemWidth} px)`}\n          </label>\n          <input\n            id=\"itemId\"\n            type=\"range\"\n            min=\"130\"\n            max=\"200\"\n            value={itemWidth}\n            className=\"slider\"\n            onChange={event => {\n              this.setState({ itemWidth: Number(event.target.value) });\n            }}\n          />\n        </div>\n\n        <div className=\"slidecontainer\">\n          <label htmlFor=\"frameId\">\n            {`Set your frame size: (${frameSize} images)`}\n          </label>\n          <input\n            id=\"frameId\"\n            type=\"range\"\n            min=\"2\"\n            max=\"5\"\n            value={frameSize}\n            className=\"slider\"\n            onChange={event => {\n              this.setState({ frameSize: Number(event.target.value) });\n            }}\n          />\n        </div>\n\n        <div className=\"slidecontainer\">\n          <label htmlFor=\"stepId\">\n            {`Set your step to slide: (${step} image${(step !== 1) ? 's' : ''})`}\n          </label>\n          <input\n            id=\"stepId\"\n            type=\"range\"\n            min=\"1\"\n            max=\"5\"\n            value={step}\n            className=\"slider\"\n            onChange={event => {\n              this.setState({ step: Number(event.target.value) });\n            }}\n          />\n        </div>\n\n        <div className=\"slidecontainer\">\n          <label htmlFor=\"durationId\">\n            {`Set your speed to slide: (${animationDuration} ms)`}\n          </label>\n          <input\n            id=\"durationId\"\n            type=\"range\"\n            min=\"500\"\n            max=\"3000\"\n            step=\"500\"\n            value={animationDuration}\n            className=\"slider\"\n            onChange={event => {\n              this.setState({ animationDuration: Number(event.target.value) });\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}